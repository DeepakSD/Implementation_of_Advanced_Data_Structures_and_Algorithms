package cs6301.g12.Implementation_of_Advanced_Data_Structures_and_Algorithms.lp1_l1;

import cs6301.g12.Implementation_of_Advanced_Data_Structures_and_Algorithms.utilities.Timer;

/**
 * This class contains Main method to test LP1 Level 1 Operations: Addition,
 * Subtraction,Multiplication,Division,Exponentiation(Num,long)
 * 
 * @author Ashwin, Arun, Deepak, Haritha
 *
 */
public class LP1L1 {

	/**
	 * Main method
	 * 
	 * @param args
	 */
	public static void main(String[] args) {

		 Num x = new Num("899990");
		 Num y = new Num("12");

//		Num x = new Num(
//				
//		Num y = new Num(
//				
//		// System.out.println(Num.add(x, y));
		// System.out.println(Num.subtract(x, y));
		//System.out.println(Num.product(x, y));
		Timer t = new Timer();
		Num result = Num.power(x, 412L);
		System.out.println(result);
		System.out.println(t.end());
		x.printList();
		y.printList();

	}
}
